{"ast":null,"code":"import _defineProperty from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/lorenzot.tuppince/git/theToolBox/client/src/components/auth/Registration.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nvar Registration = /*#__PURE__*/function (_Component) {\n  _inherits(Registration, _Component);\n\n  function Registration(props) {\n    var _this;\n\n    _classCallCheck(this, Registration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Registration).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      registration: {\n        success: false,\n        log: \"\"\n      }\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Registration, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      // console.log(\"handle change\", event);\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      console.log(\"form submitted\");\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      axios.post(\"api/users/register\", {\n        user: {\n          email: email,\n          password: password\n        }\n      }, {\n        withCredentials: true\n      }).then(function (response) {\n        var data = response.data;\n        console.log(\"registration res\", response);\n\n        if (data.error) {\n          console.log(\"registration error\", data.message);\n\n          _this2.setState({\n            registration: {\n              success: false,\n              log: data.message\n            }\n          });\n\n          throw new Error(\"Status Code: \".concat(data.status));\n        } else {\n          _this2.setState({\n            registration: {\n              success: true,\n              log: \"Successfully created a new employee with email: \".concat(data.email)\n            }\n          });\n        }\n      }).catch(function (err) {\n        console.error(\"Registration \".concat(err));\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password_confirmation\",\n        placeholder: \"Password confirmation\",\n        value: this.state.password_confirmation,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: this.state.registration.success ? \"green\" : \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, this.state.registration.log), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn \",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, \"Register\")));\n    }\n  }]);\n\n  return Registration;\n}(Component);\n\nexport { Registration as default };","map":{"version":3,"sources":["/Users/lorenzot.tuppince/git/theToolBox/client/src/components/auth/Registration.js"],"names":["React","Component","axios","Registration","props","state","email","password","password_confirmation","registration","success","log","handleSubmit","bind","handleChange","event","setState","target","name","value","console","post","user","withCredentials","then","response","data","error","message","Error","status","catch","err","preventDefault","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Registration extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            password_confirmation: \"\",\n            registration: {\n                success: false,\n                log: \"\"\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        // console.log(\"handle change\", event);\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        console.log(\"form submitted\");\n\n        const {\n            email,\n            password,\n        } = this.state;\n\n        axios.post(\"api/users/register\",{\n            user: {\n                email: email,\n                password: password,\n            }\n        },\n\n        { withCredentials: true }\n\n        ).then(response =>{\n            const { data } = response\n            console.log(\"registration res\", response);\n            if (data.error) {\n                console.log(\"registration error\", data.message);\n                this.setState({\n                    registration: {\n                        success: false,\n                        log: data.message\n                    }\n                })\n                throw new Error(`Status Code: ${data.status}`)\n            } else {\n                this.setState({\n                    registration: {\n                        success: true,\n                        log: `Successfully created a new employee with email: ${data.email}`\n                    }\n                })\n            }\n        })\n        \n        .catch(err => {\n            console.error(`Registration ${err}`);\n        })\n        event.preventDefault();\n    }\n    render() {\n        return(\n            <div>\n                <form onSubmit = { this.handleSubmit }>\n                    <input \n                        type = \"email\" \n                        name = \"email\" \n                        placeholder = \"Email\" \n                        value = { this.state.email } \n                        onChange = { this.handleChange } \n                        required \n                    />\n                    <input \n                        type = \"password\" \n                        name = \"password\" \n                        placeholder = \"Password\" \n                        value = { this.state.password } \n                        onChange = { this.handleChange } \n                        required \n                    />\n                    <input \n                        type = \"password\" \n                        name = \"password_confirmation\" \n                        placeholder = \"Password confirmation\" \n                        value = { this.state.password_confirmation } \n                        onChange = { this.handleChange } \n                        required \n                    />\n\n                    <p style={{color: this.state.registration.success ? \"green\" : \"red\"}}>{this.state.registration.log}</p>\n\n                    <button className=\"btn \" type = \"submit\">Register</button>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}