{"ast":null,"code":"import _defineProperty from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lorenzot.tuppince/git/theToolBox/client/src/components/auth/Registration.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nexport default function Registration() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      _email = _useState2[0],\n      _setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _password = _useState4[0],\n      _setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _confirmation = _useState6[0],\n      _setConfirmation = _useState6[1];\n\n  var _useState7 = useState({\n    success: false,\n    log: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      _registration = _useState8[0],\n      _setRegistration = _useState8[1];\n\n  var _useState9 = useState({\n    isEmailValid: false,\n    isPasswordMatching: false,\n    isFormComplete: false\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      _validation = _useState10[0],\n      _setValidation = _useState10[1];\n\n  var handleValidation = function handleValidation() {\n    var _objectSpread2;\n\n    // email\n    var email = document.querySelector('#registration_user_email').value.trim();\n    var password = document.querySelector('#registration_user_password').value.trim();\n    var confirmation = document.querySelector('#registration_user_password_confirmation').value.trim(); // create a condition to check whether email is a valid email using regEx\n\n    var regEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    _setValidation(_objectSpread({}, validation, (_objectSpread2 = {}, _defineProperty(_objectSpread2, 'isPasswordMatching', password !== \"\" && password === confirmation ? true : false), _defineProperty(_objectSpread2, 'isFormComplete', email !== \"\" && regEmail.test(email) && password !== \"\" && password === confirmation ? true : false), _objectSpread2)));\n  };\n\n  var handleChange = function handleChange(event) {\n    // console.log(\"handle change\", event);\n    handleValidation();\n\n    switch (event.target.name) {\n      case 'email':\n        _setEmail(event.target.value);\n\n      case 'password':\n        _setPassword(event.target.value);\n\n      case 'confirmation':\n        _setConfirmation(event.target.value);\n\n    }\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"form submitted\");\n    var _this$state = _this.state,\n        email = _this$state.email,\n        password = _this$state.password;\n    axios.post(\"api/users/register\", {\n      user: {\n        email: email,\n        password: password\n      }\n    }, {\n      withCredentials: true\n    }).then(function (response) {\n      var _response$data = response.data,\n          message = _response$data.message,\n          status = _response$data.status,\n          email = _response$data.email,\n          _response$data$error = _response$data.error,\n          error = _response$data$error === void 0 ? null : _response$data$error;\n      console.log(\"registration res\", response);\n\n      if (error) {\n        console.log(\"registration error\", message);\n\n        _setRegistration({\n          success: false,\n          log: message\n        });\n\n        throw new Error(\"Status Code: \".concat(status));\n      } else {\n        _setRegistration({\n          success: true,\n          log: \"Successfully created a new employee with email: \".concat(email)\n        });\n      }\n    }).catch(function (err) {\n      console.error(\"Registration \".concat(err));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"registration_user_email\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    value: _email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"registration_user_password\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    value: _password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"registration_user_password_confirmation\",\n    type: \"password\",\n    name: \"confirmation\",\n    placeholder: \"Password confirmation\",\n    value: _confirmation,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: _registration.success ? \"green\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, _registration.log), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-info\" + !validation.isFormComplete ? \"disabled\" : \"\",\n    disabled: !validation.isFormComplete ? true : false,\n    type: \"submit\",\n    onClick: handleSubmit,\n    value: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lorenzot.tuppince/git/theToolBox/client/src/components/auth/Registration.js"],"names":["React","useState","axios","Registration","_email","_setEmail","_password","_setPassword","_confirmation","_setConfirmation","success","log","_registration","_setRegistration","isEmailValid","isPasswordMatching","isFormComplete","_validation","_setValidation","handleValidation","email","document","querySelector","value","trim","password","confirmation","regEmail","validation","test","handleChange","event","target","name","handleSubmit","preventDefault","console","state","post","user","withCredentials","then","response","data","message","status","error","Error","catch","err","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Registration () {\n   \n    const [_email, _setEmail] = useState(\"\")\n    const [_password, _setPassword] = useState(\"\")\n    const [_confirmation, _setConfirmation] = useState(\"\")\n    const [_registration, _setRegistration] = useState({ success: false, log: \"\" })\n    const [_validation, _setValidation] = useState({ isEmailValid: false, isPasswordMatching: false, isFormComplete: false })\n\n    const handleValidation = () => {\n        // email\n        const email = document.querySelector('#registration_user_email').value.trim()\n        const password = document.querySelector('#registration_user_password').value.trim()\n        const confirmation = document.querySelector('#registration_user_password_confirmation').value.trim()\n\n        // create a condition to check whether email is a valid email using regEx\n        const regEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n\n        _setValidation({\n            ...validation,\n            ['isPasswordMatching']: password !== \"\" && password === confirmation ? true : false,\n            ['isFormComplete']: email !== \"\" && regEmail.test(email) && password !== \"\" && password === confirmation ? true : false \n        })\n    }\n\n    const handleChange = (event) => {\n        // console.log(\"handle change\", event);\n\n        handleValidation()\n\n        switch (event.target.name) {\n            case 'email':\n                _setEmail(event.target.value)\n            case 'password':\n                _setPassword(event.target.value)\n            case 'confirmation':\n                _setConfirmation(event.target.value)\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"form submitted\");\n\n        const {\n            email,\n            password,\n        } = this.state;\n\n        axios.post(\"api/users/register\",{\n            user: {\n                email: email,\n                password: password,\n\n            }\n        },\n\n        { withCredentials: true }\n\n        ).then(response =>{\n            const { message, status, email, error = null } = response.data\n            console.log(\"registration res\", response);\n            if (error) {\n                console.log(\"registration error\", message);\n    \n                _setRegistration({\n                    success: false,\n                    log: message\n                })\n                throw new Error(`Status Code: ${status}`)\n            } else {\n                _setRegistration({\n                    success: true,\n                    log:`Successfully created a new employee with email: ${email}`\n                })\n            }\n        })\n        \n        .catch(err => {\n            console.error(`Registration ${err}`);\n        })\n    }\n    return(\n        <div>\n            <form>\n                <input \n                    id=\"registration_user_email\"\n                    type = \"email\" \n                    name = \"email\" \n                    placeholder = \"Email\" \n                    value = { _email } \n                    onChange = { handleChange } \n                    required \n                />\n                <input \n                    id=\"registration_user_password\"\n                    type = \"password\" \n                    name = \"password\" \n                    placeholder = \"Password\" \n                    value = { _password } \n                    onChange = { handleChange } \n                    required \n                />\n                <input \n                    id=\"registration_user_password_confirmation\"\n                    type = \"password\" \n                    name = \"confirmation\" \n                    placeholder = \"Password confirmation\" \n                    value = { _confirmation } \n                    onChange = { handleChange } \n                    required \n                />\n\n                <p style={{color: _registration.success ? \"green\" : \"red\"}}>{ _registration.log }</p>\n\n                <input className={\"btn btn-info\" + !validation.isFormComplete ? \"disabled\" : \"\" } disabled={!validation.isFormComplete ? true : false } type=\"submit\" onClick={handleSubmit} value=\"submit\"/>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}