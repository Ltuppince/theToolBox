{"ast":null,"code":"import _defineProperty from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/lorenzot.tuppince/git/theToolBox/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/lorenzot.tuppince/git/theToolBox/client/src/components/auth/Registration.js\";\nimport React, { use } from \"react\";\nimport axios from \"axios\";\n\nvar Registration = /*#__PURE__*/function (_Component) {\n  _inherits(Registration, _Component);\n\n  function Registration(props) {\n    var _this;\n\n    _classCallCheck(this, Registration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Registration).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      validation: {\n        email: {\n          isValid: false\n        },\n        password: {\n          isMatching: false\n        },\n        isComplete: false\n      },\n      password_confirmation: \"\",\n      registration: {\n        success: false,\n        log: \"\"\n      }\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Registration, [{\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      // email\n      var email = document.querySelector('#registration_user_email').value.trim();\n      var password = document.querySelector('#registration_user_password').value.trim();\n      var confirmation = document.querySelector('#registration_user_password_confirmation').value.trim(); // create a condition to check whether email is a valid email using regEx\n\n      var regEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      this.setState({\n        validation: {\n          password: {\n            isMatching: password !== \"\" && password === confirmation ? true : false\n          },\n          isComplete: email !== \"\" && regEmail.test(email) && password !== \"\" && password === confirmation ? true : false\n        }\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      // console.log(\"handle change\", event);\n      this.handleValidation();\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      console.log(\"form submitted\");\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      axios.post(\"api/users/register\", {\n        user: {\n          email: email,\n          password: password\n        }\n      }, {\n        withCredentials: true\n      }).then(function (response) {\n        var _response$data = response.data,\n            message = _response$data.message,\n            status = _response$data.status,\n            email = _response$data.email,\n            _response$data$error = _response$data.error,\n            error = _response$data$error === void 0 ? null : _response$data$error;\n        console.log(\"registration res\", response);\n\n        if (error) {\n          console.log(\"registration error\", message);\n\n          _this2.setState({\n            registration: {\n              success: false,\n              log: message\n            }\n          });\n\n          throw new Error(\"Status Code: \".concat(status));\n        } else {\n          _this2.setState({\n            registration: {\n              success: true,\n              log: \"Successfully created a new employee with email: \".concat(email)\n            }\n          });\n        }\n      }).catch(function (err) {\n        console.error(\"Registration \".concat(err));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: \"registration_user_email\",\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"registration_user_password\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"registration_user_password_confirmation\",\n        type: \"password\",\n        name: \"password_confirmation\",\n        placeholder: \"Password confirmation\",\n        value: this.state.password_confirmation,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: this.state.registration.success ? \"green\" : \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, this.state.registration.log), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"btn btn-info\" + !this.state.validation.isComplete ? \"disabled\" : \"\",\n        disabled: !this.state.validation.isComplete ? true : false,\n        type: \"submit\",\n        onClick: this.handleSubmit,\n        value: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Registration;\n}(Component);\n\nexport { Registration as default };","map":{"version":3,"sources":["/Users/lorenzot.tuppince/git/theToolBox/client/src/components/auth/Registration.js"],"names":["React","use","axios","Registration","props","state","email","password","validation","isValid","isMatching","isComplete","password_confirmation","registration","success","log","handleSubmit","bind","handleChange","document","querySelector","value","trim","confirmation","regEmail","setState","test","event","handleValidation","target","name","preventDefault","console","post","user","withCredentials","then","response","data","message","status","error","Error","catch","err","color","Component"],"mappings":"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","sourcesContent":["import React, { use } from \"react\";\nimport axios from \"axios\";\n\nexport default class Registration extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            validation: {\n                email: {\n                    isValid: false\n                },\n                password: {\n                    isMatching: false\n                },\n                isComplete: false\n            },\n            password_confirmation: \"\",\n            registration: {\n                success: false,\n                log: \"\"\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleValidation() {\n        // email\n        const email = document.querySelector('#registration_user_email').value.trim()\n        const password = document.querySelector('#registration_user_password').value.trim()\n        const confirmation = document.querySelector('#registration_user_password_confirmation').value.trim()\n\n        // create a condition to check whether email is a valid email using regEx\n        const regEmail = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n\n        this.setState({\n            validation: {\n                password: {\n                    isMatching: password !== \"\" && password === confirmation ? true : false\n                },\n                isComplete: email !== \"\" && regEmail.test(email) && password !== \"\" && password === confirmation ? true : false \n            }\n        })\n    }\n\n    handleChange(event) {\n        // console.log(\"handle change\", event);\n\n        this.handleValidation()\n\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"form submitted\");\n\n        const {\n            email,\n            password,\n        } = this.state;\n\n        axios.post(\"api/users/register\",{\n            user: {\n                email: email,\n                password: password,\n\n            }\n        },\n\n        { withCredentials: true }\n\n        ).then(response =>{\n            const { message, status, email, error = null } = response.data\n            console.log(\"registration res\", response);\n            if (error) {\n                console.log(\"registration error\", message);\n                this.setState({\n                    registration: {\n                        success: false,\n                        log: message\n                    }\n                })\n                throw new Error(`Status Code: ${status}`)\n            } else {\n                this.setState({\n                    registration: {\n                        success: true,\n                        log: `Successfully created a new employee with email: ${email}`\n                    }\n                })\n            }\n        })\n        \n        .catch(err => {\n            console.error(`Registration ${err}`);\n        })\n    }\n    render() {\n        return(\n            <div>\n                <form>\n                    <input \n                        id=\"registration_user_email\"\n                        type = \"email\" \n                        name = \"email\" \n                        placeholder = \"Email\" \n                        value = { this.state.email } \n                        onChange = { this.handleChange } \n                        required \n                    />\n                    <input \n                        id=\"registration_user_password\"\n                        type = \"password\" \n                        name = \"password\" \n                        placeholder = \"Password\" \n                        value = { this.state.password } \n                        onChange = { this.handleChange } \n                        required \n                    />\n                    <input \n                        id=\"registration_user_password_confirmation\"\n                        type = \"password\" \n                        name = \"password_confirmation\" \n                        placeholder = \"Password confirmation\" \n                        value = { this.state.password_confirmation } \n                        onChange = { this.handleChange } \n                        required \n                    />\n\n                    <p style={{color: this.state.registration.success ? \"green\" : \"red\"}}>{this.state.registration.log}</p>\n\n                    <input className={\"btn btn-info\" + !this.state.validation.isComplete ? \"disabled\" : \"\" } disabled={!this.state.validation.isComplete ? true : false } type=\"submit\" onClick={this.handleSubmit} value=\"submit\"/>\n                </form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}